version: '3'
services:
  certbot:
    image: certbot/dns-ovh:v1.31.0
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h; done;'"
    environment:
      - PUBLIC_DNS
      - CERTBOT_MAIL
    volumes:
      - ./cert/config:/config
      - ./cert/etc-letsencrypt:/etc/letsencrypt
      - ./cert/var-lib-letsencrypt:/var/lib/letsencrypt
    restart: always
  proxy:
    image: nginx:1.23
    command: "/bin/sh -c 'while :; do sleep 6h; nginx -s reload; done & /docker-entrypoint.sh nginx -g \"daemon off;\"'"
    depends_on:
      - certbot
      - n8n
    ports:
      - 8443:443
    environment:
      - TARGET_HOST=n8n
      - TARGET_PORT=5678
      - PUBLIC_PORT=443
      - PUBLIC_DNS
    volumes:
      - ./nginx/templates:/etc/nginx/templates
      - ./cert/etc-letsencrypt:/etc/letsencrypt
    networks:
      - frontend
      - backend
    restart: always
  n8n:
    image: n8nio/n8n
    command: n8n start
    depends_on:
      - db
    environment:
      - DB_TYPE=postgresdb
      - DB_POSTGRESDB_DATABASE=n8n
      - DB_POSTGRESDB_HOST=db
      - DB_POSTGRESDB_USER=n8n
      - DB_POSTGRESDB_PASSWORD=${DB_PASSWORD}
    volumes:
      - ./n8n:/home/node/.n8n
    networks:
      - backend
    restart: always
  db:
    image: postgres:14.5
    environment:
      - POSTGRES_USER=n8n
      - POSTGRES_PASSWORD=${DB_PASSWORD}
    networks:
      - backend
    volumes:
      - db_storage:/var/lib/postgresql/data
    restart: always
  cloudflared:
    image: cloudflare/cloudflared:latest
    command: tunnel --no-autoupdate run $TUNNEL_NAME
    environment:
      - CLOUDFLARE_API_TOKEN
    volumes:
      - ./.cloudflared:/home/nonroot/.cloudflared
    networks:
      - frontend

networks:
  frontend:
    name: n8n-public
  backend:
    name: n8n-internal

volumes:
  db_storage: {}
